{"createdAt":"2023-07-15T05:19:13.023Z","updatedAt":"2023-09-07T10:13:23.000Z","id":"176","name":"KDIGI_BANK_BOT: process SMS banking API","active":true,"nodes":[{"parameters":{"httpMethod":"POST","path":"kdigi-bank-bot-process-data","responseMode":"responseNode","options":{"ignoreBots":false}},"id":"f5b65a5f-ffea-4da1-a814-622653932835","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[1520,340],"webhookId":"5b063fc7-6dd8-4036-a655-d5c65f5eeb3d"},{"parameters":{"respondWith":"json","responseBody":"={{ JSON.stringify($(\"codeHandle\").first().json) }}","options":{}},"id":"f6a5f1ac-049f-4686-8353-fcbf93342e31","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1,"position":[2200,340]},{"parameters":{"jsCode":"const rawWebhook = $('Webhook').first().json;\n\nconst webhookBody = rawWebhook.body;\n\nconst listBankSupport = [\n  'vietcombank',\n  'bidv',\n  'vietinbank',\n  'vpbank',\n  'vib',\n  'seabank',\n  'tpbank',\n  'ocb',\n  'techcombank',\n  'mbbank',\n  'acb',\n];\n\n// Check valid bank support\nconst bankName = webhookBody.from.toLowerCase();\nconst isBankSupport = listBankSupport.includes(bankName);\n\nconst result = {\n  bankName: '',\n  receivedTime: {},\n  receiverAccount: '',\n  senderAccount: '',\n  transactionType: {},\n  transactionAmount: {},\n  transactionTime: {},\n  balance: {},\n  transactionId: '',\n  transactionMessage: '',\n  originalMessage: '',\n  larkMessConfig: {\n    cardColor: 'blue',\n  },\n};\n\nresult.bankName = getBankName(bankName);\nresult.receivedTime = getReceivedTime(webhookBody.sentStamp);\nresult.receiverAccount = getReceiverAccount(webhookBody.text, bankName);\nresult.senderAccount = getSenderAccount(webhookBody.text, bankName);\nresult.transactionType = getTransactionType(webhookBody.text, bankName);\nresult.transactionAmount = getTransactionAmount(webhookBody.text, bankName);\nresult.transactionTime = getTransactionTime(webhookBody.text, bankName);\nresult.balance = getBalance(webhookBody.text, bankName);\nresult.transactionId = getTransactionId(webhookBody.text, bankName);\nresult.transactionMessage = getTransactionMessage(webhookBody.text, bankName);\nresult.originalMessage = webhookBody.text.toString().replace(/\\n/g, '');\nresult.larkMessConfig = getLarkMessConfig(bankName);\n\nreturn {\n  isBankSupport,\n  result,\n};\n\nfunction getBankName(msg) {\n  return msg;\n}\n\nfunction getReceivedTime(timestamp) {\n  return {\n    text: new Date(timestamp).toLocaleString('vi-VN', {\n      timeZone: 'Asia/Ho_Chi_Minh',\n    }),\n    timestamp: timestamp,\n  };\n}\n\nfunction getReceiverAccount(msg, bankName) {\n  let regex;\n  let match;\n  let account = '-';\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /SD TK (\\d+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'vpbank':\n      regex = /TK (\\d+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'tpbank':\n      regex = /TK: (\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'vib':\n      regex = /TK:(\\d+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'seabank':\n      regex = /TK (\\d+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'bidv':\n      regex = /TK(\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'ocb':\n      regex = /TK (\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'techcombank':\n      regex = /TK (\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'vietinbank':\n      regex = /TK:(\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'mbbank':\n      regex = /TK (\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'acb':\n      regex = /TK (\\w+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    default:\n      return account;\n  }\n}\n\nfunction getSenderAccount(msg, bankName) {\n  let regex;\n  let match;\n  let account = '-';\n\n  switch (bankName) {\n    case 'vietcombank':\n      return account;\n\n    case 'vpbank':\n      regex = /ND: NHAN TU (\\d+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        account = match[1];\n      }\n      return account;\n\n    case 'tpbank':\n      return account;\n\n    case 'vib':\n      return account;\n\n    case 'seabank':\n      //   regex = /CT tu (\\d+)/;\n      //   match = msg.match(regex);\n\n      //   if (match) {\n      //     return match[1];\n      //   }\n      return account;\n\n    case 'bidv':\n      return account;\n\n    case 'ocb':\n      return account;\n\n    case 'techcombank':\n      return account;\n\n    case 'vietinbank':\n      return account;\n\n    case 'mbbank':\n      return account;\n\n    case 'acb':\n      return account;\n\n    default:\n      return account;\n  }\n}\n\nfunction getTransactionType(msg, bankName) {\n  let regex;\n  let match;\n  let transactionType = {\n    type: '-1',\n    typeText: '-',\n  };\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /SD TK \\d+ ([+-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'vpbank':\n      regex = /([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'tpbank':\n      regex = /PS:([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'vib':\n      regex = /PS:([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'seabank':\n      regex = /phat sinh ([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'bidv':\n      regex = /([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'ocb':\n      regex = /\\(([\\+\\-])\\)/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'techcombank':\n      regex = /([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'vietinbank':\n      regex = /GD:([\\+\\-])/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'mbbank':\n      regex = /([\\+\\-])[\\d,.]+VND/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    case 'acb':\n      regex = /([\\+\\-]) [\\d,.]+/;\n      match = msg.match(regex);\n      if (match) {\n        transactionType = {\n          type: match[1],\n          typeText: match[1] === '+' ? 'credit' : 'debit',\n        };\n      }\n      return transactionType;\n\n    default:\n      return transactionType;\n  }\n}\n\nfunction getTransactionAmount(msg, bankName) {\n  let regex;\n  let match;\n  let transactionAmount = {\n    amount: -1,\n    amountText: '-',\n  };\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /SD TK \\d+ [+-]?(\\d{1,3}(,\\d{3})*?)VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: parseFloat(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'vpbank':\n      regex = /[\\+\\-](\\d{1,3}(?:,\\d{3})*)VND/;\n      match = msg.match(regex);\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'tpbank':\n      regex = /PS:[+-]([\\d.,]+)VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'vib':\n      regex = /PS:[+-]([\\d.,]+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'seabank':\n      regex = /phat sinh [+-]([\\d.,]+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'bidv':\n      regex = /[+-]([\\d.,]+)VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'ocb':\n      regex = /\\([\\+\\-]\\) ([\\d.,]+) VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'techcombank':\n      regex = /[\\+\\-]([\\d.,]+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'vietinbank':\n      regex = /GD:[\\+\\-]([\\d.,]+)VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'mbbank':\n      regex = /[\\+\\-]([\\d,.]+)VND/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    case 'acb':\n      regex = /[\\+\\-] ([\\d,.]+)/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionAmount = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return transactionAmount;\n\n    default:\n      return transactionAmount;\n  }\n}\n\nfunction getTransactionTime(msg, bankName) {\n  let regex;\n  let match;\n  let transactionTime = {\n    text: '-',\n    timestamp: 0,\n  };\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [datePart, timePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('-');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'vpbank':\n      regex = /\\d{2}:\\d{2} \\d{2}\\/\\d{2}\\/\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [timePart, datePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `20${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'tpbank':\n      regex = /\\d{2}\\/\\d{2}\\/\\d{2};\\d{2}:\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [datePart, timePart] = match[0].split(';');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `20${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'vib':\n      regex = /\\d{2}:\\d{2};\\d{2}\\/\\d{2}\\/\\d{4}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [timePart, datePart] = match[0].split(';');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'seabank':\n      regex = /\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [datePart, timePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `20${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'bidv':\n      regex = /\\d{2}:\\d{2} \\d{2}\\/\\d{2}\\/\\d{4}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [timePart, datePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'ocb':\n      return transactionTime;\n\n    case 'techcombank':\n      return transactionTime;\n\n    case 'vietinbank':\n      regex = /\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [datePart, timePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'mbbank':\n      regex = /\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [datePart, timePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `20${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    case 'acb':\n      regex = /\\d{2}:\\d{2} \\d{2}\\/\\d{2}\\/\\d{4}/;\n      match = msg.match(regex);\n\n      if (match) {\n        // Convert text to timestamp\n        // Split the time text into date and time parts\n        const [timePart, datePart] = match[0].split(' ');\n\n        // Split the date part into day, month, and year\n        const [day, month, year] = datePart.split('/');\n\n        // Combine the date parts into a valid date string (in YYYY/MM/DD format)\n        const dateString = `${year}/${month}/${day} ${timePart}`;\n\n        // Create a Date object from the valid date string\n        const dateObj = new Date(dateString);\n\n        // Get the timestamp in UTC\n        const timestamp = dateObj.getTime() - 7 * 60 * 60 * 1000;\n\n        transactionTime = {\n          text: new Date(timestamp).toLocaleString('vi-VN', {\n            timeZone: 'Asia/Ho_Chi_Minh',\n          }),\n          timestamp: timestamp,\n        };\n      }\n      return transactionTime;\n\n    default:\n      return transactionTime;\n  }\n}\n\nfunction getBalance(msg, bankName) {\n  let regex;\n  let match;\n  let balance = {\n    amount: -1,\n    amountText: '-',\n  };\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /(?<=SD )\\d{1,3}(,\\d{3})*?(?=VND)/;\n      match = msg.match(regex);\n      if (match) {\n        balance = {\n          amount: parseFloat(match[0].replace(/[\\.\\,]+/g, '')),\n          amountText: match[0].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'vpbank':\n      regex = /So du\\s?(\\d{1,3}(?:,\\d{3})*)VND/;\n      match = msg.match(regex);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'tpbank':\n      regex = /SD:\\s?([\\d.,]+)VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'vib':\n      regex = /SODU:[+-]([\\d.,]+)/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'seabank':\n      regex = /SD:\\s?([\\d.,]+)VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'bidv':\n      regex = /So du:([\\d.,]+)VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'ocb':\n      regex = /So du:\\s?([\\d.,]+) VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'techcombank':\n      regex = /So du:\\s?([\\d.,]+)/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'vietinbank':\n      regex = /SDC:\\s?([\\d.,]+)VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'mbbank':\n      regex = /SD:\\s?([\\d.,]+)VND/;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    case 'acb':\n      regex = /So du\\s?([\\d.,]+)\\./;\n      match = regex.exec(msg);\n      if (match) {\n        balance = {\n          amount: Number(match[1].replace(/[\\.\\,]+/g, '')),\n          amountText: match[1].replace(/[\\.]/g, ','),\n        };\n      }\n      return balance;\n\n    default:\n      return balance;\n  }\n}\n\nfunction getTransactionId(msg, bankName) {\n  let regex;\n  let match;\n  let transactionId;\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /Ref (\\d{1,}\\.\\d{1,}\\.\\d{1,})/;\n      match = msg.match(regex);\n\n      if (match) {\n        transactionId = match[1];\n      }\n      return transactionId;\n\n    case 'vpbank':\n      return transactionId;\n\n    case 'tpbank':\n      regex = /ND:\\s*([A-Z0-9.-]+B-11\\.)/;\n      match = msg.match(regex);\n\n      if (match) {\n        return match[1];\n      }\n      return transactionId;\n\n    case 'vib':\n      return transactionId;\n\n    case 'seabank':\n      return transactionId;\n\n    case 'bidv':\n      return transactionId;\n\n    case 'ocb':\n      return transactionId;\n\n    case 'techcombank':\n      return transactionId;\n\n    case 'vietinbank':\n      return transactionId;\n\n    case 'mbbank':\n      return transactionId;\n\n    case 'acb':\n      return transactionId;\n\n    default:\n      return transactionId;\n  }\n}\n\nfunction getTransactionMessage(msg, bankName) {\n  let regex;\n  let match;\n  let message = '-';\n\n  switch (bankName) {\n    case 'vietcombank':\n      regex = /VND. Ref (.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'vpbank':\n      regex = /ND:\\s*(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'tpbank':\n      regex = /ND:\\s*(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'vib':\n      regex = /ND:\\s*(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'seabank':\n      regex = /ND:\\s*(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'bidv':\n      regex = /ND:\\s*(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'ocb':\n      regex = /N\\/dung:\\s*(.*)\\.\\.\\./;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'techcombank':\n      regex = /So du:\\s?[\\d.,]+\\n(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'vietinbank':\n      regex = /ND:(.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'mbbank':\n      regex = /ND: (.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    case 'acb':\n      regex = /GD: (.*)/;\n      match = msg.match(regex);\n\n      if (match) {\n        message = match[1];\n      }\n      return message;\n\n    default:\n      return message;\n  }\n}\n\n/**\n * Set config for Lark Messenger\n * Card header color reference: https://open.larksuite.com/document/common-capabilities/message-card/message-cards-content/card-header\n * @param bankName Name of bank\n * @returns\n */\nfunction getLarkMessConfig(bankName) {\n  let larkMessConfig = {\n    cardColor: 'blue',\n  };\n  switch (bankName) {\n    case 'vietcombank':\n      larkMessConfig = {\n        cardColor: 'green',\n      };\n      return larkMessConfig;\n\n    case 'vpbank':\n      larkMessConfig = {\n        cardColor: 'turquoise',\n      };\n      return larkMessConfig;\n\n    case 'tpbank':\n      larkMessConfig = {\n        cardColor: 'violet',\n      };\n      return larkMessConfig;\n\n    case 'vib':\n      larkMessConfig = {\n        cardColor: 'orange',\n      };\n      return larkMessConfig;\n\n    case 'seabank':\n      larkMessConfig = {\n        cardColor: 'red',\n      };\n      return larkMessConfig;\n\n    case 'bidv':\n      larkMessConfig = {\n        cardColor: 'turquoise',\n      };\n      return larkMessConfig;\n\n    case 'ocb':\n      larkMessConfig = {\n        cardColor: 'green',\n      };\n      return larkMessConfig;\n\n    case 'techcombank':\n      larkMessConfig = {\n        cardColor: 'red',\n      };\n      return larkMessConfig;\n\n    case 'vietinbank':\n      larkMessConfig = {\n        cardColor: 'blue',\n      };\n      return larkMessConfig;\n\n    case 'mbbank':\n      larkMessConfig = {\n        cardColor: 'blue',\n      };\n      return larkMessConfig;\n\n    case 'acb':\n      larkMessConfig = {\n        cardColor: 'blue',\n      };\n      return larkMessConfig;\n\n    default:\n      return larkMessConfig;\n  }\n}\n"},"id":"d1d9371f-4160-4b15-b94b-43d148c00c86","name":"codeHandle","type":"n8n-nodes-base.code","typeVersion":1,"position":[1860,200]},{"parameters":{"method":"POST","url":"https://vn1.n8n.vn/webhook/kdigi-bank-bot-process-data","sendBody":true,"specifyBody":"json","jsonBody":"={{ JSON.stringify($input.first().json.body) }}","options":{}},"id":"6e0612a2-50c6-414f-9b7a-99b33ba88705","name":"Call v1","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1840,420]}],"connections":{"Webhook":{"main":[[{"node":"Call v1","type":"main","index":0}]]},"codeHandle":{"main":[[]]},"Call v1":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]}},"settings":{},"staticData":null,"pinData":{"Webhook":[{"json":{"headers":{"host":"app.n8n.vn","user-agent":"axios/0.21.4","content-length":"209","accept":"application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7","content-type":"application/json","x-forwarded-for":"172.23.0.1","x-forwarded-host":"app.n8n.vn","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"f2605f992776","x-real-ip":"172.23.0.1","accept-encoding":"gzip"},"params":{},"query":{},"body":{"from":"acb","text":"ACB: TK 3219956666(VND) + 1,000,000 luc 11:34 29/07/2023. So du 1,285,294. GD: LUONG CONG TIEN chuyen FT23210687296018 GD 726619-072923 11:34:56","sentStamp":1690344936000,"receivedStamp":1690344938077,"sim":"sim1"}}}]},"versionId":"55046305-dc96-46d6-ac48-cdf30728a4ca","triggerCount":1,"tags":[{"createdAt":"2023-07-15T01:37:36.669Z","updatedAt":"2023-07-15T01:37:36.669Z","id":"27","name":"KDIGI"}]}