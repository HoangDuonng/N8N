{"createdAt":"2023-02-24T10:38:32.009Z","updatedAt":"2023-05-15T04:00:31.000Z","id":"35","name":"[Caresoft] Get call logs every hour","active":true,"nodes":[{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"863e67af-d7e6-4a44-924f-99d4a40e96e4","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1,"position":[840,400]},{"parameters":{"method":"POST","url":"https://open.larksuite.com/open-apis/auth/v3/tenant_access_token/internal/","sendBody":true,"specifyBody":"json","jsonBody":"{\n    \"app_id\": \"cli_a372a34abe789010\",\n    \"app_secret\": \"DKmzzhZm18FAtMhlk2pLwczi6JVMvytI\"\n}","options":{}},"id":"86de20e1-3dda-4a68-93ab-1b39d8b4628c","name":"Get tenant access token","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1360,400]},{"parameters":{"jsCode":"// Loop over input items and add a new field\n// called 'myNewField' to the JSON of each one\nlet startDate = new Date($('Schedule Trigger').first().json.timestamp);\nlet endDate = new Date($('Schedule Trigger').first().json.timestamp);\n\nstartDate.setHours(startDate.getHours() + 6);\n// startDate.setHours(startDate.getHours() - 720); // fetch data previous 30 days\nstartDate.setMinutes(0);\nstartDate.setSeconds(1);\n\nendDate.setHours(endDate.getHours() + 7); // Add 7 hrs to compensate for Caresoft time\n\nreturn {\n  json: {\n    startDate: startDate.toISOString(),\n    endDate: endDate.toISOString(),\n  },\n};"},"id":"31014313-6699-4671-a7ef-1204b3061fdf","name":"Get start time","type":"n8n-nodes-base.code","typeVersion":1,"position":[1000,400]},{"parameters":{"url":"https://web11.caresoft.vn/hsvn/api/v1/calls","sendQuery":true,"queryParameters":{"parameters":[{"name":"start_time_since","value":"={{ $node[\"Get start time\"].json.startDate }}"},{"name":"start_time_to","value":"={{ $node[\"Get start time\"].json.endDate }}"},{"name":"count","value":"500"},{"name":"page","value":"1"},{"name":"order_by","value":"start_time"},{"name":"order_type","value":"desc"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer 1g6yF9w3pPbn-kc"}]},"options":{}},"id":"838ef8d3-5b73-4868-9fb6-0a87404515f9","name":"Get call log in the last hour","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1180,400]},{"parameters":{"method":"POST","url":"https://open.larksuite.com/open-apis/bitable/v1/apps/baslg7TBWBKBB5Bc5vJhovnm3Jc/tables/tbl62BNK4pAYT76F/records/batch_create","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $node[\"Get tenant access token\"].json.tenant_access_token }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\"records\":{{ JSON.stringify($('[Call Log] Convert to Lark format').first().json.records) }}}","options":{}},"id":"b9e07148-6d3b-4a9b-9be9-461909cb1999","name":"[Call data] Add records to Bitable","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1800,520]},{"parameters":{"method":"POST","url":"https://open.larksuite.com/open-apis/bitable/v1/apps/baslg7TBWBKBB5Bc5vJhovnm3Jc/tables/tblstCVsQu0Etn5e/records/batch_create","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $node[\"Get tenant access token\"].json.tenant_access_token }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\"records\":{{ JSON.stringify($('[Raw call log] Convert to Lark format').first().json.records) }}}","options":{}},"id":"2e649d4c-1b89-4081-8336-05d2f3494333","name":"[Raw call log data] Add records to Bitable","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1800,300]},{"parameters":{"jsCode":"let input = $('Get call log in the last hour').first().json.calls;\n\n// Get calls data\nlet records = input.map((call) => {\n  let fields = {\n    id: call.id,\n    customer_id: call.customer_id,\n    call_id: call.call_id,\n    path: {\n      text: \"Xem cuộc gọi\",\n      link: call.path\n    },\n    path_download: {\n      text:\"Tải cuộc gọi\",\n      link: call.path_download\n    },\n    caller: call.caller,\n    called: call.called,\n    user_id: call.user_id,\n    agent_id: call.agent_id.split(',').at(-1),\n    agent_log: call.agent_id,\n    group_id: call.group_id,\n    call_type: call.call_type,\n    start_time: new Date(call.start_time).getTime() - 3600000*7, // substract 7hrs\n    call_status: call.call_status,\n    end_time: new Date(call.end_time).getTime() - 3600000*7,\n    wait_time: call.wait_time,\n    hold_time: call.hold_time,\n    talk_time: call.talk_time,\n    end_status: call.end_status,\n    ticket_id: call.ticket_id,\n    last_agent_id: call.last_agent_id,\n    last_user_id: call.last_user_id,\n    call_survey: call.call_survey,\n    call_survey_result: call.call_survey_result,\n    missed_reason: call.missed_reason,\n  };\n  return { fields };\n});\n\nlet result = { json: { records } };\nreturn result;"},"id":"9299045c-c9bb-4f90-87b9-30f6f1f596d9","name":"[Raw call log] Convert to Lark format","type":"n8n-nodes-base.code","typeVersion":1,"position":[1600,300]},{"parameters":{"jsCode":"let input = $('Get call log in the last hour').first().json.calls;\n\n// Get calls data\nlet records = input.map((call) => {\n  let fields = {    \n    \"ID cuộc gọi\": call.call_id,   \n    // customer_id: call.customer_id,\n    // agent_id: call.agent_id,\n    // group_id: call.group_id,    \n    // ticket_id: call.ticket_id,   \n  };\n  return { fields };\n});\n\nlet result = { json: { records } };\nreturn result;"},"id":"7ae0b4f9-1a55-4161-94b2-33aa3ef65902","name":"[Call Log] Convert to Lark format","type":"n8n-nodes-base.code","typeVersion":1,"position":[1600,520]}],"connections":{"Schedule Trigger":{"main":[[{"node":"Get start time","type":"main","index":0}]]},"Get tenant access token":{"main":[[{"node":"[Raw call log] Convert to Lark format","type":"main","index":0},{"node":"[Call Log] Convert to Lark format","type":"main","index":0}]]},"Get start time":{"main":[[{"node":"Get call log in the last hour","type":"main","index":0}]]},"Get call log in the last hour":{"main":[[{"node":"Get tenant access token","type":"main","index":0}]]},"[Raw call log] Convert to Lark format":{"main":[[{"node":"[Raw call log data] Add records to Bitable","type":"main","index":0}]]},"[Call Log] Convert to Lark format":{"main":[[{"node":"[Call data] Add records to Bitable","type":"main","index":0}]]}},"settings":{},"staticData":{"node:Schedule Trigger":{"recurrencyRules":[]}},"pinData":{},"versionId":"736cda1b-02b7-40a3-9f97-0ec7823cbe13","triggerCount":1,"tags":[{"createdAt":"2023-02-27T05:42:03.910Z","updatedAt":"2023-02-27T05:42:03.910Z","id":"10","name":"Caresoft"}]}